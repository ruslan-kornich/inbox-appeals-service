[project]
name = "Inbox appeals service"
readme = "README.md"
requires-python = ">=3.12"


[tool.aerich]
tortoise_orm = "app.config.db.TORTOISE_ORM"
location = "app/migrations"
src_folder = "./."

[tool.ruff]
target-version = "py312"
line-length = 120

exclude = [
    "**/alembic/*",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "FIX",  # flake8-fixme
    "BLE",  # flake8-blind-except
    "ERA001",  # Found commented-out code
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link on the line following this TODO
    "B008",  # do not perform function calls in argument defaults
    "D100",  # Missing docstring in public module
    "D200",  # One-line docstring should fit on one line
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in {name}
]

[tool.ruff.lint.isort]
section-order = [
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**.py" = [
    "D",  # pydocstyle
    "ERA001",  # Found commented-out code
    "S101",  # use of `assert`
    "ANN001",  # Missing type annotation for function argument {name}
    "ANN201",  # Missing return type annotation for public function {name}
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    "SIM108",  # Use ternary operator {contents} instead of if-else-block
]

"**/__init__.py" = [
    "D",  # pydocstyle
    "F401",  # {name} imported but unused; consider using importlib.util.find_spec to test for availability
    "F403",  # from {name} import * used; unable to detect undefined names
]
